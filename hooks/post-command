#!/usr/bin/env bash

set -euo pipefail

if [[ ${BUILDKITE_COMMAND_EXIT_STATUS:-0} != "0" ]]
then
  echo "--- Skipping git-tag because the command failed"
  exit 0
fi

TOKEN=${BUILDKITE_PLUGIN_GIT_TAG_GITHUBTOKEN:-$(printenv ${BUILDKITE_PLUGIN_GIT_TAG_GITHUBTOKEN_ENV:-"GITHUB_TOKEN"} || true)}
REPO_ORG=$(basename $(dirname $BUILDKITE_REPO) | sed 's/git@github.com://')
REPO_NAME=$(basename $BUILDKITE_REPO .git)
REPO_SLUG=${BUILDKITE_PLUGIN_GIT_TAG_REPONAME:-"$REPO_ORG/$REPO_NAME"}

branch=${BUILDKITE_PLUGIN_GIT_TAG_BRANCH:-${BUILDKITE_BRANCH}}
message=${BUILDKITE_PLUGIN_GIT_TAG_MESSAGE:-"Build $BUILDKITE_BUILD_NUMBER (branch: $BUILDKITE_BRANCH)\n$(git log -1)"}
username=${BUILDKITE_PLUGIN_GIT_TAG_USER_1_NAME:-${BUILDKITE_BUILD_CREATOR}}
email=${BUILDKITE_PLUGIN_GIT_TAG_USER_0_EMAIL:-${BUILDKITE_BUILD_CREATOR_EMAIL}}
prerelease=${BUILDKITE_PLUGIN_GIT_TAG_PRERELEASE:-false}
draft=${BUILDKITE_PLUGIN_GIT_TAG_DRAFT:-false}

echo "Setting git username: ${username}"
git config user.name "$username"
echo "Setting git email: ${email}"
git config user.email "$email"

echo "Creating git tag ${BUILDKITE_PLUGIN_GIT_TAG_VERSION}"
git tag "${BUILDKITE_PLUGIN_GIT_TAG_VERSION}" -m "${message}"
git push --tags
echo "Git tag pushed"

if [[ -n $TOKEN && $BUILDKITE_PLUGIN_GIT_TAG_RELEASE == "true" ]]; then
  generate_post_data()
  {
    cat <<EOF
{
  "tag_name": "$BUILDKITE_PLUGIN_GIT_TAG_VERSION",
  "name": "$BUILDKITE_PLUGIN_GIT_TAG_VERSION",
  "body": "$message",
  "prerelease": $prerelease,
  "draft": $draft
}
EOF
  }

  echo "Creating GitHub release $BUILDKITE_PLUGIN_GIT_TAG_VERSION for repo $REPO_SLUG"
  curl --data "$(generate_post_data)" -H "Authorization: token $TOKEN" "https://api.github.com/repos/$REPO_SLUG/releases"
  echo "GitHub release created"
fi
